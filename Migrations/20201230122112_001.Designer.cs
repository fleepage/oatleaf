// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fleepage.oatleaf.com.DataAccess;

namespace fleepage.oatleaf.com.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201230122112_001")]
    partial class _001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Accounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(16)");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Attendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("Attended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Beneficiary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Organisation")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long>("student")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Beneficiary");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.ContactList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetupId")
                        .IsUnique()
                        .HasFilter("[SetupId] IS NOT NULL");

                    b.ToTable("ContactList");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Freelance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("Freelance");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Level", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FreelanceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("OrgAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SchoolAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StaffsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeachersId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FreelanceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrgAdminId");

                    b.HasIndex("SchoolAdminId");

                    b.HasIndex("StaffsId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.OrgAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("OrgAdmin");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Organisation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BlockedMessage")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("FoundedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Founder")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Organisation");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Parent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Permissions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FreelanceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(8)");

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrgAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("SchoolAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StaffsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeachersId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FreelanceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrgAdminId");

                    b.HasIndex("ParentId");

                    b.HasIndex("SchoolAdminId");

                    b.HasIndex("StaffsId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Register", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Absent")
                        .HasColumnType("int");

                    b.Property<DateTime>("Attendance")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CalledBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LevelId")
                        .HasColumnType("bigint");

                    b.Property<int>("Present")
                        .HasColumnType("int");

                    b.Property<long?>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetupId");

                    b.ToTable("Register");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FreelanceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrgAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolAdminId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sentiment")
                        .HasColumnType("int");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StaffsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeachersId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FreelanceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrgAdminId");

                    b.HasIndex("SchoolAdminId");

                    b.HasIndex("SetupId");

                    b.HasIndex("StaffsId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockedMessage")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("FoundedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Founder")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreelancer")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("SchoolAdmin");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Semester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.Property<long?>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetupId");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Session", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetupId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Setup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SmsAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SmsAccountId1")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId")
                        .IsUnique()
                        .HasFilter("[SchoolId] IS NOT NULL");

                    b.HasIndex("SmsAccountId1");

                    b.ToTable("Setup");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SmsAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(32)");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("SmsAccount");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SocialMedia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SchoolsId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("UserId");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Staffs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdmissionNumber")
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("AdmittedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.HasIndex("ParentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SubjectPool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubjectPool");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Subjects", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SetupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubjectPoolId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("SetupId");

                    b.HasIndex("SubjectPoolId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("ActivePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("InActivePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscription");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActivePrice = 0m,
                            Code = "TRIAL",
                            CreatedDate = new DateTime(2020, 12, 30, 12, 21, 11, 840, DateTimeKind.Utc).AddTicks(757),
                            Description = "trial period subscription",
                            Duration = 90,
                            InActivePrice = 0m,
                            IsAvailable = true,
                            Name = "Trial Subscription",
                            Type = 1
                        },
                        new
                        {
                            Id = 2L,
                            ActivePrice = 200m,
                            Code = "BRONZE",
                            CreatedDate = new DateTime(2020, 12, 30, 12, 21, 11, 840, DateTimeKind.Utc).AddTicks(4590),
                            Description = "Bronze subscription",
                            Duration = 120,
                            InActivePrice = 0m,
                            IsAvailable = true,
                            Name = "Bronze Subscription",
                            Type = 1
                        },
                        new
                        {
                            Id = 3L,
                            ActivePrice = 300m,
                            Code = "SILVER",
                            CreatedDate = new DateTime(2020, 12, 30, 12, 21, 11, 840, DateTimeKind.Utc).AddTicks(4691),
                            Description = "Silver subscription",
                            Duration = 120,
                            InActivePrice = 0m,
                            IsAvailable = true,
                            Name = "Silver Subscription",
                            Type = 1
                        },
                        new
                        {
                            Id = 4L,
                            ActivePrice = 500m,
                            Code = "GOLD",
                            CreatedDate = new DateTime(2020, 12, 30, 12, 21, 11, 840, DateTimeKind.Utc).AddTicks(4694),
                            Description = "Gold subscription",
                            Duration = 120,
                            InActivePrice = 0m,
                            IsAvailable = true,
                            Name = "Gold Subscription",
                            Type = 1
                        });
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Subscriptions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriberId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubscriptionID")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccountsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<long?>("SchoolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId")
                        .IsUnique()
                        .HasFilter("[AccountsId] IS NOT NULL");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EmailConfirmationCode")
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("EmailConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("LastUpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoginFailedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PhoneConfirmationCode")
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("PhoneConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResetPasswordCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResetPasswordRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TempPassword")
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Accounts", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Organisation", null)
                        .WithMany("Accounts")
                        .HasForeignKey("OrganisationId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.School", null)
                        .WithMany("Accounts")
                        .HasForeignKey("SchoolId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.User", null)
                        .WithMany("Accounts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Attendance", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Student", null)
                        .WithMany("Attendance")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.ContactList", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", "Setup")
                        .WithOne("ContactList")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.ContactList", "SetupId");

                    b.Navigation("Setup");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Freelance", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("Freelance")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Freelance", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Level", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", null)
                        .WithMany("Level")
                        .HasForeignKey("SetupId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Teacher", null)
                        .WithMany("Levels")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Member", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("Member")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Member", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Notification", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Freelance", null)
                        .WithMany("Notifications")
                        .HasForeignKey("FreelanceId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Member", null)
                        .WithMany("Notifications")
                        .HasForeignKey("MemberId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.OrgAdmin", null)
                        .WithMany("Notifications")
                        .HasForeignKey("OrgAdminId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", null)
                        .WithMany("Notifications")
                        .HasForeignKey("SchoolAdminId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Staffs", null)
                        .WithMany("Notifications")
                        .HasForeignKey("StaffsId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Student", null)
                        .WithMany("Notifications")
                        .HasForeignKey("StudentId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Teacher", null)
                        .WithMany("Notifications")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.OrgAdmin", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("OrgAdmin")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.OrgAdmin", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Parent", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("Parent")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Parent", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Permissions", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Freelance", null)
                        .WithMany("Permissions")
                        .HasForeignKey("FreelanceId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Member", null)
                        .WithMany("Permissions")
                        .HasForeignKey("MemberId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.OrgAdmin", null)
                        .WithMany("Permissions")
                        .HasForeignKey("OrgAdminId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Parent", null)
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", null)
                        .WithMany("Permissions")
                        .HasForeignKey("SchoolAdminId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Staffs", null)
                        .WithMany("Permissions")
                        .HasForeignKey("StaffsId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Student", null)
                        .WithMany("Permissions")
                        .HasForeignKey("StudentId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Teacher", null)
                        .WithMany("Permissions")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Register", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", null)
                        .WithMany("Register")
                        .HasForeignKey("SetupId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Review", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Freelance", null)
                        .WithMany("Reviews")
                        .HasForeignKey("FreelanceId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Member", null)
                        .WithMany("Reviews")
                        .HasForeignKey("MemberId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.OrgAdmin", null)
                        .WithMany("Reviews")
                        .HasForeignKey("OrgAdminId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", null)
                        .WithMany("Reviews")
                        .HasForeignKey("SchoolAdminId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", null)
                        .WithMany("Reviews")
                        .HasForeignKey("SetupId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Staffs", null)
                        .WithMany("Reviews")
                        .HasForeignKey("StaffsId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Student", null)
                        .WithMany("Reviews")
                        .HasForeignKey("StudentId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Teacher", null)
                        .WithMany("Reviews")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("SchoolAdmin")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Semester", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", null)
                        .WithMany("Semesters")
                        .HasForeignKey("SetupId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Session", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", null)
                        .WithMany("Sessions")
                        .HasForeignKey("SetupId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Setup", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.School", "School")
                        .WithOne("Setup")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Setup", "SchoolId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.SmsAccount", "SmsAccount")
                        .WithMany()
                        .HasForeignKey("SmsAccountId1");

                    b.Navigation("School");

                    b.Navigation("SmsAccount");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SocialMedia", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Organisation", null)
                        .WithMany("SocialMedia")
                        .HasForeignKey("OrganisationId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.School", null)
                        .WithMany("SocialMedia")
                        .HasForeignKey("SchoolId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.User", null)
                        .WithMany("SocialMedia")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Staffs", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("Staffs")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Staffs", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Student", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("Students")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Student", "AccountsId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Parent", null)
                        .WithMany("Students")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Subjects", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Level", "Level")
                        .WithMany("Subjects")
                        .HasForeignKey("LevelId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Setup", null)
                        .WithMany("Subjects")
                        .HasForeignKey("SetupId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.SubjectPool", "SubjectPool")
                        .WithMany()
                        .HasForeignKey("SubjectPoolId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Teacher", null)
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Level");

                    b.Navigation("SubjectPool");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Subscriptions", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Organisation", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("OrganisationId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.School", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("SchoolId");

                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Teacher", b =>
                {
                    b.HasOne("fleepage.oatleaf.com.Domain.Models.Accounts", null)
                        .WithOne("Teachers")
                        .HasForeignKey("fleepage.oatleaf.com.Domain.Models.Teacher", "AccountsId");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Accounts", b =>
                {
                    b.Navigation("Freelance");

                    b.Navigation("Member");

                    b.Navigation("OrgAdmin");

                    b.Navigation("Parent");

                    b.Navigation("SchoolAdmin");

                    b.Navigation("Staffs");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Freelance", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Level", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Member", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.OrgAdmin", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Organisation", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("SocialMedia");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Parent", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.School", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Setup");

                    b.Navigation("SocialMedia");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.SchoolAdmin", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Setup", b =>
                {
                    b.Navigation("ContactList");

                    b.Navigation("Level");

                    b.Navigation("Register");

                    b.Navigation("Reviews");

                    b.Navigation("Semesters");

                    b.Navigation("Sessions");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Staffs", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Student", b =>
                {
                    b.Navigation("Attendance");

                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.Teacher", b =>
                {
                    b.Navigation("Levels");

                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("Reviews");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("fleepage.oatleaf.com.Domain.Models.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("SocialMedia");
                });
#pragma warning restore 612, 618
        }
    }
}
